---
- name: Print realm name
  debug:
    msg: "Configuring realm {{ realm.name }}"

- name: Get realms
  command: "{{ keycloak_bin_path }}/kcadm.sh get  realms -F realm"
  register: realms_json

- name: "Set fact isRealDefined for realm {{ realm.name }}"
  set_fact:
    isRealDefined: "{{ (realms_json.stdout | from_json) | json_query(realm_query)  }}"
  vars:
    realm_query: "contains([*].realm,`{{ realm.name }}`)"

- name: "Is the realm already created?" 
  debug:
    msg: "Is the realm {{ realm.name }} already created?: {{ isRealDefined }}"    

- name: Create realm
  command: "{{ keycloak_bin_path }}/kcadm.sh create realms -f {{keycloak.config_dir}}/{{ realm.name }}-realm.json"
  when: not isRealDefined

- name: Update existing realm with the latest version
  command: "{{ keycloak_bin_path }}/kcadm.sh update realms/{{ realm.name }} -f {{keycloak.config_dir}}/{{ realm.name }}-realm.json"
  when: isRealDefined

- name: Configure clients
  include_tasks: client_config_tasks.yml
  loop: "{{ realm.clients }}"
  loop_control:
    loop_var: client
  when: client.skip_configuration is not defined

# Roles might depend on other clients. Configure after all clients have been instantiated.
- name: Create client composite role
  include_tasks: create_client_role.yml 
  loop: "{{ realm.clients }}"
  loop_control:
    loop_var: client