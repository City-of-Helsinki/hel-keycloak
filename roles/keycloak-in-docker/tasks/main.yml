---
- name: Run Debian specific setup tasks
  include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Ensure docker Python API is available
  pip:
    name: "docker"
    state: present

- name: Ensure the shared network exists
  docker_network:
    name: keycloak

- name: Ensure database is running
  docker_container:
    name: "{{ keycloak.database.instance }}"
    image: "postgres:10.10"
    state: started
    # recreate: yes
    env:
      POSTGRES_USER: "{{ keycloak.database.user }}"
      POSTGRES_PASSWORD: "{{ keycloak.database.password }}"
      POSTGRES_DB: "{{ keycloak.database.name }}"
      PGDATA: /srv/postgres
    # Remove ephemeral volumes on stopping
    keep_volumes: no
    # use our own network
    network_mode: bridge
    networks:
      - name: keycloak
    # Postgres data location on host
    volumes:
      - "{{ keycloak_pg_data_path }}:/srv/postgres"
  register: database_host

- set_fact:
    postgres_container_ip: "{{ database_host.container.NetworkSettings.Networks.keycloak.IPAddress }}"

- name: Debug postgres_container_ip
  debug: var=postgres_container_ip

- name: Ensure keycloak is running and inject initial password config
  docker_container:
    name: "{{ keycloak.instance.name }}"
    image: "jboss/keycloak"
    state: started
    # recreate: yes
    # Remove ephemeral volumes on stopping
    keep_volumes: no
    network_mode: bridge
    volumes:
      - /etc/ssl/certs:/srv/certs:ro
    networks:
      - name: keycloak
    published_ports: "{{ keycloak.published_ports }}"
    env:
      KEYCLOAK_USER: "{{ keycloak.admin.user }}"
      KEYCLOAK_PASSWORD: "{{ keycloak.admin.password }}"
      DB_VENDOR: postgres
      DB_ADDR: "{{ keycloak.database.instance }}"
      DB_DATABASE: "{{ keycloak.database.name }}"
      DB_USER: "{{Â keycloak.database.user }}"
      DB_PASSWORD: "{{ keycloak.database.password }}"
      X509_CA_BUNDLE: /srv/certs
  register: result

- name: Copy container's keycloak/bin to the host
  shell: docker cp keycloak_test:/opt/jboss/keycloak/bin ./bin
